@model DataAccessLayer.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}

<div class="content-header">
    <div class="container-fluid">
        <h2>Contact "Send Email"</h2>

        @if (ViewBag.TargetEmail != null)
        {
            <p>An Email To: @ViewBag.TargetEmail</p>
        }
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <div class="text-success" id="div-sucess">
                    @ViewBag.success
                </div>

                <div class="text-danger" id="div-error">
                    @ViewBag.error
                </div>

                <hr />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @if (ViewBag.TargetEmail == null)
                {
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        @Html.Label("TargetUsers", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("TargetUsers", null, "Select Users", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })*@
                            @Html.ValidationMessage("TargetUsers", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to DashBoard", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</section>

@section scripts{

    <script>
        $(function () {
            
            // remove the form of the search input in the dashboard page.
            $("nav.main-header form#search-form").remove();

        });
    </script>

}