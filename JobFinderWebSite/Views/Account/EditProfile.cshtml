@model DataAccessLayer.Models.EditProfileViewModel

@{
    ViewBag.Title = "EditProfile";

    if (ViewBag.IsAdmin != null && ViewBag.IsAdmin)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
}

@if (ViewBag.IsAdmin != null && ViewBag.IsAdmin)
{
    @section styles{

        <style>
            form {
                margin-left: 10px;
            }
        </style>

    }

    <div class="content-header">
        <div class="container-fluid">
            <h2>EditProfile</h2>
        </div>
    </div>
}
else
{
    <h2>EditProfile</h2>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="text-success">@ViewBag.success</h4>
        <h4 class="text-danger">@ViewBag.error</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div>
        <a class="btn btn-default" href="~/Home/Index">Back to Home</a>

        @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
        {
            <a class="btn btn-default" href="~/Admins/Index">Back to Dashboard</a>
        }
    </div>
}

@if (ViewBag.IsAdmin != null && ViewBag.IsAdmin)
{
    @section scripts{

        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $(function () {

                // remove the form of the search input in the dashboard page.
                $("nav.main-header form#search-form").remove();

            });
        </script>

    }
}